name: Build FFmpeg 4.2.2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-ffmpeg:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'
    
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r21e
        add-to-path: true
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential yasm pkg-config git
    
    - name: Download FFmpeg 4.2.2
      run: |
        wget https://ffmpeg.org/releases/ffmpeg-4.2.2.tar.bz2
        tar -xjf ffmpeg-4.2.2.tar.bz2
        mv ffmpeg-4.2.2 ffmpeg
    
    - name: Configure FFmpeg for armeabi-v7a
      run: |
        cd ffmpeg
        
        ARCH=arm
        CPU=armv7-a
        CROSS_PREFIX=armv7a-linux-androideabi
        
        export TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
        export SYSROOT=$TOOLCHAIN/sysroot
        export PATH=$TOOLCHAIN/bin:$PATH
        export CC=${CROSS_PREFIX}21-clang
        export CXX=${CROSS_PREFIX}21-clang++
        export AR=llvm-ar
        export AS=llvm-as
        export RANLIB=llvm-ranlib
        export STRIP=llvm-strip
        
        ./configure \
          --prefix=./android-build/armeabi-v7a \
          --enable-shared \
          --disable-static \
          --disable-doc \
          --disable-programs \
          --disable-symver \
          --enable-cross-compile \
          --target-os=android \
          --arch=$ARCH \
          --cpu=$CPU \
          --cross-prefix=$CROSS_PREFIX- \
          --sysroot=$SYSROOT \
          --cc=$CC \
          --cxx=$CXX \
          --enable-pic \
          --enable-avfilter \
          --enable-avcodec \
          --enable-avformat \
          --enable-avutil \
          --disable-avdevice \
          --disable-postproc \
          --disable-swresample \
          --disable-swscale \
          --enable-protocol=file \
          --enable-small
    
    - name: Build FFmpeg
      run: |
        cd ffmpeg
        make -j$(nproc)
        make install
    
    - name: Package libraries and headers
      run: |
        cd ffmpeg/android-build/armeabi-v7a
        
        # Создаем структуру как в оригинальном проекте
        mkdir -p package/libs/armeabi-v7a
        mkdir -p package/include
        
        # Копируем .so файлы
        cp lib/libavfilter.so package/libs/armeabi-v7a/
        cp lib/libavcodec.so package/libs/armeabi-v7a/
        cp lib/libavformat.so package/libs/armeabi-v7a/
        cp lib/libavutil.so package/libs/armeabi-v7a/
        
        # Копируем заголовочные файлы
        cp -r include/* package/include/
        
        # Создаем архив
        cd package
        tar -czf ../ffmpeg-4.2.2-armeabi-v7a.tar.gz libs/ include/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-armeabi-v7a
        path: ffmpeg/android-build/armeabi-v7a/ffmpeg-4.2.2-armeabi-v7a.tar.gz
    
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ffmpeg-4.2.2-${{ github.run_number }}
        name: FFmpeg 4.2.2 Build ${{ github.run_number }}
        files: ffmpeg/android-build/armeabi-v7a/ffmpeg-4.2.2-armeabi-v7a.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
